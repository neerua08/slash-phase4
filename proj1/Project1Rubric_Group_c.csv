Notes,Score,Links or Evidence,
Video,3,Functionality Video in the Github Repo --> https://github.com/TommasU/slash,
"Workload is spread over the whole team (one team member is often Xtimes more productive than the others but nevertheless, here is a track record that everyone is contributing a lot)",2,Fairly equitable distribution of work,
Number of commits,3,438 commits.,
Number of commits: by different people,2,Not equal number of commits but number of commits don't really reflect actual work.,"55 themrshubh
53 AnmolikaGoyal
39 rahil1304
30 annie0467
29 antgad
29 pratikdevnani
26 TommasU
25 moksh98
19 pncnmnp
19 sskarra1234
15 shubhangij12
15 srujanarao
9 secheaper
8 rdeodha
4 radhikatoravi
2 SN-18
2 ranjitha105
2 myNameArnav"
Issues reports: there are many,3,Relatively fewer issues posted at https://github.com/TommasU/slash/issues?q=is%3Aissue+is%3Aclosed,
Issues are being closed,3,"All issues are closed, posted at https://github.com/TommasU/slash/issues?q=is%3Aissue+is%3Aclosed",
DOI badge: exists,3,https://zenodo.org/record/5739350,
"Docs: doco generated, format not ugly",3,Well written docs with proper explanation of installation steps and differentiating between mini version and full version of the application,
Docs: what: point descriptions of each class/function (in isolation),3,Great information related to the setup stuff and what they have implemented using the command line arguments.,
"Docs: how: for common use cases X,Y,Z mini-tutorials showing worked examples on how to do X,Y,Z",2,There are only several commands to explore functionalities of the app but not all are mentioned in the docs file.,
"Docs: why: docs tell a story, motivate the whole thing, deliver a punchline that makes you want to rush out and use the thing",3,Explanation of use cases and motivation behind building this project was a plus point which induced interest.,
"Docs: short video, animated, hosted on your repo. That convinces people why they want to work on your code.",3,Animated videos added in the repository to induce interest in people to pursue this project,
Use of version control tools,3,Git is used,
Use of style checkers,3,Use of Python Style Checker has ensured the styling --> https://github.com/TommasU/slash/actions/workflows/style_checker.yml,
Use of code formatters.,3,Use of Pylint --> https://github.com/TommasU/slash/actions/workflows/pylint.yml,
Use of syntax checkers.,3,Pylint is also responsible for syntax checking,
Use of code coverage,3,https://app.codecov.io/gh/TommasU/slash,
Other automated analysis tools,0,No other automated tool has been used,
Test cases exist,3,Extensive tests have been conducted --> https://github.com/TommasU/slash/tree/main/tests,
Test cases are routinely executed,3,https://github.com/TommasU/slash/tree/main/.github/workflows,
The files CONTRIBUTING.md lists coding standards and lots of tips on how to extend the system without screwing things up,3,https://github.com/TommasU/slash/blob/main/CONTRIBUTING.md,
Issues are discussed before they are closed,3,https://github.com/TommasU/slash/issues?q=is%3Aissue+is%3Aclosed,
Chat channel: exists,0,Couldn't find in the docs,
Test cases: a large proportion of the issues related to handling failing cases,3,The failing cases are balanced - https://github.com/TommasU/slash/issues?q=is%3Aissue+is%3Aclosed,
Evidence that the whole team is using the same tools: everyone can get to all tools and files,3,Using flask which runs on all platforms,
"Evidence that the whole team is using the same tools (e.g. config files in the repo, updated by lots of different people)",3,yes there are multiple people commiting in the code base but everyone follows similar structure which makes it easier to interpret,
"Evidence that the whole team is using the same tools (e.g. tutor can ask anyone to share screen, they demonstrate the system running on their computer)",3,flask setup would be same for everyone on which the application runs; part of the application runs on command line itself so can be said that everyone uses same tools,
Evidence that the members of the team are working across multiple places in the code base,2,"Everyone has contributed to the code, config & docs.",
Short release cycles,3,https://github.com/TommasU/slash/tags,
"1.1 Does your website and documentation provide a clear, high-level overview of your software?",Y,https://github.com/TommasU/slash,
1.2: Does your website and documentation clearly describe the type of user who should use your software?,Y,,
1.3: Do you publish case studies to show how your software has been used by yourself and others?,Y,,
2.1: Is the name of your project/software unique?,Y,The name gives an idea of what the project is about,
2.2: Is your project/software name free from trademark violations?,Y,No violations of any sort,
3.1: Is your software available as a package that can be deployed without building it?,N,,
3.2: Is your software available for free?,Y,,
"3.3: Is your source code publicly available to download, either as a downloadable bundle or via access to a source code repository?",Y,,
"3.4: Is your software hosted in an established, third-party repository likeGitHub (https://github.com), BitBucket (https://bitbucket.org),LaunchPad (https://launchpad.net) orSourceForge (https://sourceforge.net)?",N,"No, part of the project runs on command line and the other part runs on flask on a local development server",
4.1: Is your documentation clearly available on your website or within your software?,Y,There is a docs folder in Github,
"4.2: Does your documentation include a ""quick start"" guide, that provides a short overview of how to use your software with some basic examples of use?",Y,https://github.com/TommasU/slash,
"4.3: If you provide more extensive documentation, does this provide clear, step-by-step instructions on how to deploy and use your software?",Y,Some aspects of the documentation could be more specific but rest is good.,
"4.4: Do you provide a comprehensive guide to all your software’s commands, functions and options?",Y,Detailed description of the backend APIs,
4.5: Do you provide troubleshooting information that describes the symptoms and step-by-step solutions for problems and error messages?,N,Nothing specific for error,
"4.6: If your software can be used as a library, package or service by other software, do you provide comprehensive API documentation?",N,No such documenttation,
4.7: Do you store your documentation under revision control with your source code?,Y,,
"4.8: Do you publish your release history e.g. release data, version numbers, key features of each release etc. on your web site or in your documentation?",Y,https://github.com/TommasU/slash/tags,
5.1: Does your software describe how a user can get help with using your software?,Y,There is a mention of the IDs of contributors (discord),
"5.2: Does your website and documentation describe what support, if any, you provide to users and developers?",Y,The repo is open to QnA,
5.3: Does your project have an e-mail address or forum that is solely for supporting users?,Y,https://github.com/TommasU/slash#email-support,
5.4: Are e-mails to your support e-mail address received by more than one person?,Y,,
5.5: Does your project have a ticketing system to manage bug reports and feature requests?,Y,Github project board,
"5.6: Is your project's ticketing system publicly visible to your users, so they can view bug reports and feature requests?",Y,https://github.com/TommasU/slash/projects/1,
6.1: Is your software’s architecture and design modular?,Y,The frontend and backend functionality has been well managed using flask in the mini version of the project.,
6.2: Does your software use an accepted coding standard or convention?,Y,https://github.com/TommasU/slash/blob/main/CONTRIBUTING.md,
"7.1: Does your software allow data to be imported and exported using open data formats? e.g. GIF, SVG, HTML, XML, tar, zip, CSV, JSON, NetCDF, or domain specific ones e.g. GIF, SVG, HTML, XML, tar, zip, CSV, JSON, NetCDF, or domain specific ones",Y,,
"7.2: Does your software allow communications using open communications protocols? e.g. HTTP, FTP, XMPP, SOAP over HTTP, or domain-specific ones",Y,,
8.1: Is your software cross-platform compatible?,Y,It's a website,
9.1: Does your software adhere to appropriate accessibility conventions or standards?,N,,
9.2: Does your documentation adhere to appropriate accessibility conventions or standards?,,,
10.1: Is your source code stored in a repository under revision control?,Y,Several tags,
10.2: Is each source code release a snapshot of the repository?,Y,,
10.3: Are releases tagged in the repository?,Y,,
"10.4: Is there a branch of the repository that is always stable? (i.e. tests always pass, code always builds successfully)",N,"No mention of any branch which says ""release"" which shows that there is no such stable branch.",
10.5: Do you back-up your repository,Y,Several branches and forks found,
11.1: Do you provide publicly-available instructions for building your software from the source code?,Y,https://github.com/TommasU/slash#key-accesing-mini-version-ui,
"11.2: Can you build, or package, your software using an automated tool?",N,There is no such way to do that as of now,
11.3: Do you provide publicly-available instructions for deploying your software?,N,,
11.4: Does your documentation list all third-party dependencies?,Y,Not explicitly but the repository has requirements.txt which mentions all the package dependencies of the project,
11.5: Does your documentation list the version number for all third-party dependencies?,Y,"In the requirements.txt, the version is also mentioned for the packages",
"11.6: Does your software list the web address, and licences for all third-party dependencies and say whether the dependencies are mandatory or optional?",N,The license details are mentioned --> https://github.com/TommasU/slash/blob/main/LICENSE,
11.7: Can you download dependencies using a dependency management tool or package manager?,Y,Using pip we can install anything we want in this project.,
11.8: Do you have tests that can be run after your software has been built or deployed to show whether the build or deployment has been successful?,Y,https://github.com/TommasU/slash/tree/main/tests,
12.1: Do you have an automated test suite for your software?,N,,
12.2: Do you have a framework to periodically (e.g. nightly) run your tests on the latest version of the source code?,N,The test cases only run after every push,
"12.3: Do you use continuous integration, automatically running tests whenever changes are made to your source code?",N,,
12.4: Are your test results publicly visible?,N,,
12.5: Are all manually-run tests documented?,N,,
"13.1: Does your project have resources (e.g. blog, Twitter, RSS feed, Facebook page, wiki, mailing list) that are regularly updated with information about your software?",N,,
13.2: Does your website state how many projects and users are associated with your project?,Y,https://github.com/TommasU/slash/graphs/contributors,
13.3: Do you provide success stories on your website?,N,,
13.4: Do you list your important partners and collaborators on your website?,Y,All the partners can be seen through contributor section along with the lines of addition/deletion done by them --> https://github.com/TommasU/slash/graphs/contributors,
13.5: Do you list your project's publications on your website or link to a resource where these are available?,N,,
13.6: Do you list third-party publications that refer to your software on your website or link to a resource where these are available?,N,,
13.7: Can users subscribe to notifications to changes to your source code repository?,Y,They can star the repo on github,
"13.8: If your software is developed as an open source project (and, not just a project developing open source software), do you have a governance model?",Y,"https://github.com/TommasU/slash/blob/main/CODE-OF-CONDUCT.md, https://github.com/TommasU/slash/blob/main/LICENSE",
"14.1: Do you accept contributions (e.g. bug fixes, enhancements, documentation updates, tutorials) from people who are not part of your project?",Y,https://github.com/TommasU/slash/blob/main/CONTRIBUTING.md,
14.2: Do you have a contributions policy?,Y,https://github.com/TommasU/slash/blob/main/CONTRIBUTING.md,
14.3: Is your contributions' policy publicly available?,Y,https://github.com/TommasU/slash/blob/main/CONTRIBUTING.md,
14.4: Do contributors keep the copyright/IP of their contributions?,N,,
15.1: Does your website and documentation clearly state the copyright owners of your software and documentation?,N,But not necessary as present in the LICENSE document,
15.2: Does each of your source code files include a copyright statement?,N,But not necessary as present in the LICENSE document,
15.3: Does your website and documentation clearly state the licence of your software?,Y,https://github.com/TommasU/slash/blob/main/LICENSE,
15.4: Is your software released under an open source licence?,Y,https://github.com/TommasU/slash/blob/main/LICENSE,
15.5: Is your software released under an OSI-approved open-source licence?,Y,MIT License is used which is an OSI approved License,
15.6: Does each of your source code files include a licence header?,N,,
15.7: Do you have a recommended citation for your software?,N,,
"16.1: Does your website or documentation include a project roadmap (a list of project and development milestones for the next 3, 6 and 12 months)?",N,Not milestones but it is written what next to achieve(future goals),
"16.2: Does your website or documentation describe how your project is funded, and the period over which funding is guaranteed?",N,,
"16.3: Do you make timely announcements of the deprecation of components, APIs, etc.?",N,,
